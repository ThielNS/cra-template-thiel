/**
 *
 * {{ pascalCase name }} Service
 *
 */

import axiosInstance from 'modules/configs/axiosInstance';
import {
  {{ pascalCase name }}ServiceDetailResponse,
  {{ pascalCase name }}ServiceListResponse,
  {{ pascalCase name }}ServiceListRequestParams,
  {{ pascalCase name }}ServiceCreateData,
  {{ pascalCase name }}ServiceCreateResponse,
  {{ pascalCase name }}ServiceEditData,
  {{ pascalCase name }}ServiceEditResponse,
  {{ pascalCase name }}ServiceRemoveResponse,
} from './types';

const baseUrl = '/{{ camelCase name }}';

const {{ camelCase name }}Service = {
  async list(params?: {{ pascalCase name }}ServiceListRequestParams) {
    const result = await axiosInstance.get<{{ pascalCase name }}ServiceListResponse>(
      baseUrl,
      {
        params,
      },
    );

    return result.data;
  },

  async detail({{ camelCase name }}Id: string) {
    const result = await axiosInstance.get<{{ pascalCase name }}ServiceDetailResponse>(
      `${baseUrl}/${ {{ camelCase name }}Id }`,
    );

    return result.data;
  },

  async create(data: {{ pascalCase name }}ServiceCreateData) {
    const result = await axiosInstance.post<{{ pascalCase name }}ServiceCreateResponse>(
      baseUrl,
      data,
    );

    return result.data;
  },

  async edit({ {{ camelCase name }}Id, ...data }: {{ pascalCase name }}ServiceEditData & { {{ camelCase name }}Id: string }) {
    const result = await axiosInstance.put<{{ pascalCase name }}ServiceEditResponse>(
      `${baseUrl}/${ {{ camelCase name }}Id }`,
      data,
    );

    return result.data;
  },

  async remove({{ camelCase name }}Id: string) {
    const result = await axiosInstance.delete<{{ pascalCase name }}ServiceRemoveResponse>(
      `${baseUrl}/${ {{ camelCase name }}Id }`,
    );

    return result.data;
  },
};

export default {{ camelCase name }}Service;
